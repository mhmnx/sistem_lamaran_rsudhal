version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - media_volume:/app/media
    expose:
      - 8000
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: /api
    container_name: frontend
    restart: unless-stopped
    volumes:
      - media_volume:/app/media # Dibutuhkan oleh Nginx untuk menyajikan media
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  media_volume: